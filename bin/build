#!/usr/bin/env node --harmony

const chalk = require('chalk')
const metalsmith = require('metalsmith')
const collections = require('metalsmith-collections')
const permalinks = require('metalsmith-permalinks')
const markdown = require('metalsmith-markdown')
const typography = require('metalsmith-typography')
const widows = require('metalsmith-widow')
const drafts = require('metalsmith-drafts')
const layouts = require('metalsmith-layouts')

const speakers = require('../data/speakers')
const sessions = require('../data/sessions')

const metadata = require('../metadata')
const env = process.env.NODE_ENV || 'development'

/**
 * Build configuration
 */
const config = {
	source: '../content',
	destination: '../build',
	layouts: '../layouts',
	clean: false,
	env: env
}

/**
 * Denormalize speaker data
 */
const denormalize = session => {
	if (session.start) {
		session.start = new Date(session.start)
	}
	if (session.speaker) {
		session.speaker = speakers[session.speaker]
	}
	if (session.interviewees) {
		session.interviewees = session.interviewees.map(id => speakers[id])
	}
	if (session.subSessions) {
		session.subSessions = session.subSessions.map(session => {
			session.isSubsession = true
			return denormalize(session)
		})
	}
	return session
}

/**
 * Add `data` to `metadata`
 */
metadata.speakers = speakers
metadata.sessions = sessions.map(denormalize)

/**
 * Prepare metalsmith
 */
const site = metalsmith(__dirname)
	.source(config.source)
	.destination(config.destination)
	.clean(config.clean)
	.metadata(metadata)
	.use(drafts())
	.use(markdown({
		smartypants: true,
		gfm: true
	}))
	.use(typography({
		lang: 'en'
	}))
	.use(permalinks(':title'))
	.use(layouts({
		engine: 'swig',
		default: 'index.html',
		partials: config.layouts,
		directory: config.layouts
	}))
	.use(widows({
		selectors: ['.session-title']
	}))


/**
 * Build the site
 */
site.build(err => {
	if (err) {
		console.log(chalk.red('Error:'), err.message)
		console.log(chalk.gray(err.stack))
		process.exit(1)
	}
})
